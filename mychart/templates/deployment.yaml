apiVersion: apps/v1
kind: Deployment
metadata:
  name: counters
  labels:
    app: counters
spec:
  replicas: 1
  selector:
    matchLabels:
      app: counters
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: counters
    spec:
      containers:
        - name: counters
          image: amadouth/swh-counters
          imagePullPolicy: Always
          command:
            - /entrypoint.sh
          ports:
            - containerPort: 5011
          readinessProbe:
            httpGet:
              path: /
              port: 5011
              scheme: "HTTP"
            initialDelaySeconds: 0
            failureThreshold: 1
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /
              port: 5011
              scheme: "HTTP"
            initialDelaySeconds: 5
            failureThreshold: 30
            periodSeconds: 1
          env:
            - name: PORT
              value: "5010"
            - name: STATSD_HOST
              value: "prometheus-statsd-exporter"
            - name: STATSD_PORT
              value: "9125"
            - name: SWH_CONFIG_FILENAME
              value: /etc/softwareheritage/config.yml
            - name: LOGLEVEL
              value: INFO
          volumeMounts:
            - name: config
              mountPath: /etc/softwareheritage/config.yml
              subPath: config.yml
              readOnly: true
            - name: config
              mountPath: /entrypoint.sh
              subPath: entrypoint.sh
              readOnly: true
          resources:
            requests:
              memory: "75Mi"
              cpu: "20m"
            limits:
              memory: "150Mi"
              cpu: "200m"
      volumes:
        - name: config
          configMap:
            name: counters
            defaultMode: 0777

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          imagePullPolicy: Always
          args:
            - "--save"
            - "60"
            - "1" # flush every minutes
          ports:
            - containerPort: 6379
          resources:
            requests:
              memory: "50Mi"
              cpu: "50m"
            limits:
              memory: "100Mi"
              cpu: "100m"
          volumeMounts:
            - mountPath: "/data"
              name: redis-data-pvc-helm
      volumes:
        - name: redis-data-pvc-helm
          persistentVolumeClaim:
            claimName: redis-data-pvc-helm